upstream backend {
    server 127.0.0.1:3000;
}
upstream api {
    server 127.0.0.1:8000;
}
upstream scorecard {
    server 127.0.0.1:5000;
}
server {
    server_name localhost;
    rewrite ^(.*) https://localhost$1 permanent;
}
# Generate /etc/ssl/certs/myssl.crt and /etc/ssl/private/myssl.key
# using l
server {
    listen 443 ssl;
    ssl_certificate /etc/ssl/certs/myssl.crt;
    ssl_certificate_key /etc/ssl/private/myssl.key;
    keepalive_timeout 70;
    server_name localhost;
    location / {
        proxy_pass http://backend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        gzip on;
        gzip_types text/plain application/javascript application/x-javascript text/javascript text/xml text/css;
    }
}
server {
    listen 443 ssl;
    ssl_certificate /etc/ssl/certs/myssl.crt;
    ssl_certificate_key /etc/ssl/private/myssl.key;
    keepalive_timeout 70;
    server_name api.localhost;
    location / {
        proxy_pass http://api;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        gzip on;
        gzip_types text/plain application/javascript application/x-javascript text/javascript text/xml text/css;
    }
}
server {
    listen 443 ssl;
    ssl_certificate /etc/ssl/certs/myssl.crt;
    ssl_certificate_key /etc/ssl/private/myssl.key;
    keepalive_timeout 70;
    server_name scorecard.localhost;
    location / {
        proxy_pass http://scorecard;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        gzip on;
        gzip_types text/plain application/javascript application/x-javascript text/javascript text/xml text/css;
    }
}
