upstream web {
    server 127.0.0.1:3000;
}

upstream auth-gateway {
    server 127.0.0.1:8000;
}

upstream scorecard {
    server 127.0.0.1:4000;
}

upstream notebook-api {
    server 127.0.0.1:5000;
}

server {
    server_name app.hail.lcaol;
    listen 80;
    location / {
        proxy_pass http://web$request_uri;
    }
}

server {
    server_name auth-gateway
    listen 80;
    location / {
        proxy_pass http://auth-gateway$request_uri;
    }
}

server {
    server_name scorecard
    listen 80;
    location / {
        proxy_pass http://scorecard$request_uri;
    }
}

server {
    server_name notebook-api.hail.local;
    
    location = /auth {
        internal;
        # resolver kube-dns.kube-system.svc.cluster.local;
        proxy_pass http://auth-gateway/verify/;
    }

    location = /auth-notebook {
        internal;
        # resolver kube-dns.kube-system.svc.cluster.local;
        proxy_pass http://notebook-api/api/verify/$svc_name/;
    }

    location / {
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Credentials' 'true';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, DELETE, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'Authorization,Keep-Alive,User-Agent,X-Requested-With,Cache-Control,Content-Type';
            add_header 'Access-Control-Max-Age' 86400;
            add_header 'Content-Type' 'text/plain charset=UTF-8';
            add_header 'Content-Length' 0;
            return 204;
            break;
        }

        auth_request /auth;
        auth_request_set $auth_user $upstream_http_user;
        auth_request_set $auth_scope $upstream_http_scope;
        proxy_pass http://notebook-api;
        proxy_set_header Host $http_host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Host $http_host;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header User $auth_user;
        proxy_set_header Scope $auth_scope;
        proxy_http_version 1.1;
        proxy_read_timeout 86400;
        proxy_buffering off;
    }

    location ~ /instance/([^/]+)/(.*) {
        set $svc_name $1;
        auth_request /auth-notebook;

        #resolver kube-dns.kube-system.svc.cluster.local;
        proxy_pass http://localhost:5000/$request_uri;
        proxy_set_header Host $http_host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Host $http_host;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_http_version 1.1;
        proxy_redirect off;
        proxy_buffering off;
        proxy_read_timeout 86400;
        proxy_connect_timeout 10s;
    }

    location ~ /instance-ready/([^/]+)/ {
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Credentials' 'true';
            add_header 'Access-Control-Allow-Methods' 'GET, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'Authorization,Keep-Alive,User-Agent,X-Requested-With,Cache-Control,Content-Type';
            add_header 'Access-Control-Max-Age' 86400;
            add_header 'Content-Type' 'text/plain charset=UTF-8';
            add_header 'Content-Length' 0;
            return 204;
            break;
        }

        set $svc_name $1;
        auth_request /auth-notebook;

        return 200;
        # resolver kube-dns.kube-system.svc.cluster.local;
        # proxy_pass http://$1.default.svc.cluster.local/instance/$1/;
    }

    add_header 'Access-Control-Allow-Origin' '*';
    add_header 'Access-Control-Allow-Credentials' 'true';
    add_header 'Access-Control-Allow-Methods' 'GET, POST, DELETE, OPTIONS';
    add_header 'Access-Control-Allow-Headers' 'Authorization,Keep-Alive,User-Agent,Cache-Control,Content-Type';
    listen 80;
}
